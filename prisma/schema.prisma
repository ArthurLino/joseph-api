// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  email              String             @unique
  password           String             @map("password")
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  balance            Float              @default(0.0)
  cashFlow           CashFlowActivity[]
  cashFlowCategories CashFlowCategory[]

  @@map("users")
}

model CashFlowActivity {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  authorId    String               @db.ObjectId
  author      User                 @relation(fields: [authorId], references: [id])
  value       Float
  type        CashFlowActivityType
  categoryIDs String[]             @db.ObjectId
  categories  CashFlowCategory[]   @relation(fields: [categoryIDs], references: [id])
  notes       String?
  date        DateTime             @default(now())

  @@map("movements")
}

model CashFlowCategory {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  name        String             @unique
  authorId    String?            @db.ObjectId
  author      User?              @relation(fields: [authorId], references: [id])
  movementIDs String[]           @db.ObjectId
  movements   CashFlowActivity[] @relation(fields: [movementIDs], references: [id])

  @@map("categories")
}

enum CashFlowActivityType {
  INCOME
  EXPENSE
}
